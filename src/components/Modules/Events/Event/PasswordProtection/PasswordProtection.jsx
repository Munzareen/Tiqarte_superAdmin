import {
  Button,
  TextField as MuiTextField,
  FormControlLabel,
  Typography,
  Box,
  Checkbox,
  FormControl,
  OutlinedInput,
  InputLabel,
  InputAdornment,
  IconButton,
  Grid,
} from "@mui/material"
import React, { useEffect, useState } from "react"
import { InputField } from "../../../../Common/InputField"
import ContentCopyIcon from "@mui/icons-material/ContentCopy"
import InputDateAndTimePicker from "../../../../Common/InputDateAndTimePicker"
import { DateField, TimeField } from "@mui/x-date-pickers"
import dayjs from "dayjs"
import { useSelector } from "react-redux"

export const PasswordProtection = ({
  handleNext,
  handleBack,
  setPasswordProtection,
}) => {
  const [formData, setFormData] = useState({
    password: "",
    date: dayjs(),
    time: dayjs().format("HH:mm"),
    autoGeneratedLink: "",
  })
  const editData = useSelector((state) => state.editData)
  const handleInputChange = (event) => {
    const { name, value } = event.target
    setFormData((prevFields) => ({
      ...prevFields,
      [name]: value,
    }))
  }
  const handleContinue = () => {
    const passwordProtection = {
      formData,
    }
    setPasswordProtection(passwordProtection)
    handleNext()
  }
  useEffect(() => {
    const { passwordProtection } = editData || {}
   setFormData({
    password: passwordProtection?.Password,
    date: passwordProtection?.ScheduleDate,
    time:passwordProtection?.ScheduleTime,
    autoGeneratedLink: passwordProtection?.AutoGeneratedLink,
  })
  }, [])
  return (
    <Grid container columnSpacing={4}>
      <Grid item xs={12}>
        <Typography
          sx={{
            color: " #758895",
            fontWeight: 400,
            fontSize: "14px",
            mt: "4px",
          }}
        >
          If you would like to add password protection to event page them add
          them here.
        </Typography>
      </Grid>
      <Grid item xs={12}>
        <FormControlLabel
          sx={{
            // mr: "114px",

            color: "#758895",
            "& .MuiTypography-root": {
              fontSize: "14px",
            },
          }}
          control={<Checkbox defaultChecked />}
          label='Enable passwords protection'
        />
      </Grid>
      <Grid item xs={12}>
        <InputField
          label={"Enter password"}
          sx={{ width: "100%", mt: "32px" }}
          type={"password"}
          name='password'
          value={formData.password}
          onChange={handleInputChange}
        />
      </Grid>
      <Grid item xs={12} sx={{ mt: "32px" }}>
        <FormControlLabel
          sx={{
            // mr: "114px",

            color: "#758895",
            "& .MuiTypography-root": {
              fontSize: "14px",
            },
          }}
          control={<Checkbox defaultChecked />}
          label='Schedule'
        />
      </Grid>

      {/* <Box
        sx={{
          display: "flex",
          justifyContent: "space-between",
          flexDirection: "row",
          mt: "32px",
        }}
      >
        
      </Box> */}
      <Grid
        item
        xs={12}
        sm={6}
        sx={{
          mt: "32px",
          "& .MuiStack-root": {
            width: "100%",
          },
        }}
      >
        <InputDateAndTimePicker
          field='DateField'
          fieldType={
            <DateField
            format="DD/MM/YYYY"
              sx={{
                "& .MuiInputBase-root": {
                  height: "48px",
                  width: "100%",
                  borderRadius: "16px",
                  bgcolor: "white",
                  overflow: "hidden",
                  color: "#707070",

                  "& .MuiTypography-root": {
                    color: "red",
                    fontSize: "14px",
                  },
                },

                // height: "48px",
              }}
              onChange={(date) =>
                setFormData({
                  ...formData,
                  date: dayjs(date).format("DD MMM YYYY"),
                })
              }
            />
          }
          label={"Date"}
        />
      </Grid>
      <Grid
        item
        xs={12}
        sm={6}
        sx={{
          mt: "32px",
          "& .MuiStack-root": {
            width: "100%",
          },
        }}
      >
        <InputDateAndTimePicker
          field='TimeField'
          fieldType={
            <TimeField
            ampm={false}
              sx={{
                "& .MuiInputBase-root": {
                  height: "48px",
                  width: "100%",
                  borderRadius: "16px",
                  bgcolor: "white",
                  overflow: "hidden",
                  color: "#707070",

                  "& .MuiTypography-root": {
                    color: "red",
                    fontSize: "14px",
                  },
                },

                // height: "48px",
              }}
              onChange={(time) =>
                setFormData({ ...formData, time: dayjs(time).format("HH:mm") })
              }
            />
          }
          label={"Time"}
        />
      </Grid>
      <Grid
        item
        xs={12}
        sx={{
          mt: "32px",
        }}
      >
        <Typography
          sx={{
            color: "#707070",
            fontWeight: 400,
            fontSize: "14px",
          }}
        >
          Auto generated link
        </Typography>
      </Grid>
      <Grid item xs={12}>
        <FormControl
          variant='outlined'
          sx={{
            width: "100%",
            mt: "8px",
            //   height:"168px",
          }}
        >
          <InputLabel htmlFor='outlined-adornment-text'>Copy link</InputLabel>
          <OutlinedInput
            multiline
            rows={11}
            sx={{
              alignItems: { xs: "center" },
              borderRadius: "15px",
              borderColor: "#CFCFCF",
              // height: "168px",
            }}
            variant='outlined'
            id='outlined-adornment-text'
            label='Copy link'
            endAdornment={
              <InputAdornment position='end'>
                <IconButton
                  edge='end'
                  id='copyButtonText'
                  aria-label='copy content'
                  onMouseDown={(e) => e.preventDefault()}
                  data-clipboard-target='#outlined-adornment-text'
                  sx={{ top: -115 }}
                >
                  {<Box component='img' src='/copyIcon.png' />}
                </IconButton>
              </InputAdornment>
            }
            name='autoGeneratedLink'
            value={formData.autoGeneratedLink}
            onChange={(e) => handleInputChange(e)}
          />
        </FormControl>
      </Grid>
      <Grid
        item
        xs={12}
        sx={{
          display: "flex",
          justifyContent: "flex-start",
          mt: "48px",
          mb: { xs: "30px", sm: "190px" },
        }}
      >
        <Button
          // type='submit'
          variant='contained'
          onClick={handleContinue}
          sx={{
            color: "white",
            borderColor: "#FCA311",
            width: { xs: "100%", sm: "332px" },
            height: "55px",
            fontSize: "18px",
            fontWeight: 600,
            bgcolor: "#2460B8",
            textTransform: "capitalize",
            borderRadius: "16px",
            border: "1px soliid #FCA311",
            "&.MuiButton-root:hover": {
              bgcolor: "#2460B8",
            },
          }}
        >
          Continue
        </Button>
        <Button
          // type='submit'
          variant='outlined'
          onClick={handleContinue}
          sx={{
            color: "#404040",
            borderColor: "#404040",
            width: { xs: "100%", sm: "332px" },
            height: "55px",
            fontSize: "18px",
            fontWeight: 600,
            textTransform: "capitalize",
            borderRadius: "16px",
            ml: "32px",
          }}
        >
          Skip
        </Button>
      </Grid>
    </Grid>
  )
}
